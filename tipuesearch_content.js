var tipuesearch = {"pages":[{"tags":"AmericanEnglish","title":"63 THE ALARM CLOCK.","loc":"/63-the-alarm-clock.html","text":"63 The alarm clock A lady, who found it not easy to wake in the morning as early as she wished, bought an alarm clock. The lady placed her clock at the head of the bed, and at the right time she found herself roused by the long, rattling sound. She arose at once, and felt better all day for here early rising. THis lasted for some weeks. The alarm clock faithfully did its duty, and was plainly heard so long as it was obeyed. But, after a time, the lady grew tired of early rising. When she was waked by the noise, she merely turned over in bed, and slept again. In a few days, the clock ceased to rouse her from her sleep. It spoke just as loudly as ever, but she did not hear it, because she had been in the habit of not obeying it. Finding that she might was well be without it, she resolved that when she heared the sound she would jump up. Just so it is with conscience. If we will obey its voice, even in the most trifling things, we can always hear it, clear and strong. But if we allow ourselves to do what we have some fears may not be quite right, we shall grow more and more sleepy, until the voice of conscience has no longer power to wake us.","url":"/63-the-alarm-clock.html"},{"tags":"AmericanEnglish","title":"69 WHERE THERE IS A WILL, THERE IS A WAY.","loc":"/69-where-there-is-a-will-there-is-a-way.html","text":"69 Where there is a will, there is a way. Henry Bond was about ten years old when his father died. His mother found if diffcult to provide for the support of a large family, thus left entirely in her care. At one time, however, Henry wanted a grammar, in order to join a class in that study, and his mother could not furnish hime with the money to buy it. He was very much troubled about it, and went to bed with a heavy heart, thinking what could be done. On waking in the morning, he found that a deep snow had fallen, and the cold wind was blowing furiously. \"Ah,\" said he, \"it is an ill wind that blows nobody good.\" He rose, ran to the house of a neighbor, and offered his service to clear a path around his premises. The offer was accepted. Having completed this work, and received his pay, he went to another place for the same purpose, and then to another, until he had earned enough to buy a grammar. When school commenced, Henry was in his seat ready to begin the lesson in his new book happily. From that time, Henry was always the first in all his classes, He knew no such word as fail, but always succeeded in all he attempted. Having the will, he always found the way.","url":"/69-where-there-is-a-will-there-is-a-way.html"},{"tags":"misc","title":"如何有效利用好碎片化时间","loc":"/ru-he-you-xiao-li-yong-hao-sui-pian-hua-shi-jian.html","text":"为何要利用碎片化时间？ 在现代职场，工作时间越来越碎片化是总的趋势，特别是移动终端的便捷使用，从原来的电话、邮件、QQ，到微博、微信、抖音、短视频等等。 必须思考如何利用这些碎片化时间来完成系统性的工作，以便能在众多碎片化时间条件下，依然保持好持续和整体化的思考。 果想要一整块、大块时间来完成一个大项的工作，通常是要避免不被打忧，最佳方式 是利用早上的时间，在早上早餐之前早起2小时！但是这对于普通人来说是非常难做到的。 如何利用 1 拆分工作 把大块的工作细分化，拆解为小块的任务，这样充分利用小碎片时间完成各个小任务。 2 形成随时记录的习惯 可以是纸笔、手机上的日历APP、电脑上的表格等，关键是在大脑突然有了好想法--即灵感、特别的事务安排、或者对之前某个工作的改进想法等等，马上作记录 3 预安排 利用小块时间在大脑作彩排某个重要事务：即在大脑里提前作个预安排 4 及时奖励 在多个碎片化时间的有效使用后及时奖励自己，以便更好的形成习惯 5 进阶 回顾各个碎片化时间的长度，以尽可能的针对性安排在或长或短的时间段内完成适宜的任务量 其它 待补充完善、总结","url":"/ru-he-you-xiao-li-yong-hao-sui-pian-hua-shi-jian.html"},{"tags":"misc","title":"time-recored","loc":"/time-recored.html","text":"时间记录--养成记录时间使用的习惯 1 起床 06:40 2 洗漱 06:45 3 flask_bootstrapVue 07:40 4 俯卧撑35 07:45 5 this-recored5 07:50 6 newpelicanBlog 08:05 7 WWCC 08:15 8 clearBody 08:20 9 breakfast 08:40 10 bikework 08:45 11 towork 08:55 学习使用markdown，表格中无样式，难道是要自己添加CSS样式？ tables are here row1 row2 row3 line11 line12 line13 line21 line22 line23 table1 table2 line11 line12 line21 line22 line31 line32 Name Academy score Harry Potter Gryffindor 90 Hermione Granger Gryffindor 100 Draco Malfoy Slytherin 90 ANDROID手机上使用atimelogger，践行\"没有记录，就没有发生，没有记录便无法管理\"。 \"乱的开始，也比‘等准备好一切再开始'强，开始……开始习惯……慢慢完善\"","url":"/time-recored.html"},{"tags":"live, pelican","title":"使用pelican创建静态博客","loc":"/shi-yong-pelicanchuang-jian-jing-tai-bo-ke.html","text":"首先使用pip安装pelican和markdown pip install pelican markdown 然后创建目录 mkdir my_blog 接着进入目录cd my_blog，执行pelican-quickstart，当前目录内就会生成默认配置好的文件 mkdir my_blog cd my_blog pelican-quickstart 修改配置 pelicanconf.py是博客的配置文件 使用主题和插件 获取主题：git clone git://github.com/getpelican/pelican-themes.git 获取插件：git clone git://github.com/getpelican/pelican-plugins.git 修改pelicanconf.py文件，使主题和插件生效： THEME = 'pelican-themes/pelican-bootstrap3' #直接指定主题目录 PLUGIN_PATHS = [\"plugins\", \"pelican-plugins\"] #pelican-plugins为插件总目录 PLUGINS = ['tag_cloud', 'related_posts'] #插件总目录里的插件(文件夹)名 上传到GitHub Pages 域名设置 在content/extra/内添加CNAME文件，CNAME里只需写入一行域名，例如：github.com 修改pelianconf.py: STATIC_PATHS = ['extra'] EXTRA_PATH_METADATA = {'extra/CNAME': {'path': 'CNAME'},} git操作 cd output git init git remote add origin https://github.com/your_name/your_blog.git git add -A git commit -am \"update blog\" git pull origin master git push origin master 以后更新网站只需要执行： cd my_blog make html make publish","url":"/shi-yong-pelicanchuang-jian-jing-tai-bo-ke.html"},{"tags":"misc","title":"time management and high effect","loc":"/time-management-and-high-effect.html","text":"关于\"时间管理与高效能\"的学习 学习内容选择： <<高效能人士的 7 个习惯>> -- 史蒂芬·柯维（美） <<时间管理 100 讲>> -- 喜马拉雅 FM 易武滨 要点 20/80 原则 专著于重要的事情 4D 做重要的事，推迟不重要的事，委托其他人能做的事，删除不需要做的事 收集记录事情、分类事情、启动蕃茄钟 20 分钟 专著 事情、休息 5 分钟记录 记录时间、分析时间、安排时间 积极主动、要事第一、以终为始 工具使用 纸和笔 手机 APP PC 端跨平台软件： OmniFocus Evernote 淘宝蕃茄钟 ~~删除不必要的工具~~","url":"/time-management-and-high-effect.html"},{"tags":"101 — Quick Start","title":"Quickly get a GitHub hosted blog with Pelican, Elegant with little setup steps.","loc":"/quickly-get-a-github-hosted-blog-with-pelican-elegant-with-little-setup-steps.html","text":"Introduction We're using automation for some of the aspects of Elegant development, but one of the issues for users trying to setup a new site with Pelican is to download plugins, theme, doing configuration, etc. Based on this feedback, a new 'blog-o-matic' approach has been tested: The approach Blog-o-Matic , uses several discussed topics so far: Github and GH Pages for hosting the source and the website Travis-CI.org for automating the update and generation process 'Pelican' for static rendering of your blog from the markdown or AsciiDoc articles 'Elegant' for the 'Theme' peru for automating repository upgrades for plugins, etc The setup process is outlined at its README.md and just requires a few steps to setup that, from that point, will allow you to get your website published each time you commit a new document to the content folder. You can also check the 'generated' website after installation via https://iranzo.github.io/blog-o-matic How does it work under the hood? The repository, contains already the required setups and configurations for setting up a blog using github pages. It requires some manual steps like configuring authentication token in order for automation to 'push' to github the 'rendered webpage', plus enabling 'Travis CI' automation for doing that step. Check the updated README on Blog-o-Matic if you're interested in the setup, but thing is: Setup Repository contains already predefined Travis CI configuration A GH token is needed for Travis CI to push to the 'master' branch that is used by github pages The token needs to be configured as environment variable in 'travis-ci.org' which needs to be enabled for your repository Once this is done, all the automation is ready. Automation workflow The automation, on a new 'commit' (new config, new article, whatever), that can be even done via github.com Web User Interface, will launch a set of tasks: Preparation Setup python environment (Pelican uses python) Install tool 'peru' to sync from other repositories (for later syncing plugins, latest theme, etc) Launch the synchronization of themes, plugins etc (as defined in peru.yaml ) Validation Validate that web page builds ( make html ) Validate that it builds with publish configuration ( make publish ) Deployment Copy extra files to generated website Update the checked out git config to use https so that we can use the token defined in environment variable GHTOKEN Regenerate website and push to github Blog is ready! At this point, Travis CI will have built the blog with the sample content content/welcome.md . Keep adding new files to your new repository in the content/ folder and check the configuration settings in pelicanconf.py to customize your name, twitter, SEO, etc Bear in mind, that at this point you're using a regular Elegant setup with Pelican and some Pelican Plugins, so refer to peru.yaml for the URLs containing the files and extra information that might be helpful for you to learn on the features and customization possibilities. Enjoy your Elegant blog!","url":"/quickly-get-a-github-hosted-blog-with-pelican-elegant-with-little-setup-steps.html"},{"tags":"misc","title":"Second article","loc":"/second-article-en.html","text":"This is some article, in english","url":"/second-article-en.html"}]};